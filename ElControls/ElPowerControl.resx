<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        Qk3WDwAAAAAAADYAAAAoAAAAZAAAABQAAAABABAAAAAAAAAAAAASCwAAEgsAAAAAAAAAAAAAeWt4a3hr
        eGt4a3hnd2d3Z3dnV2dXZ1ZnVmNWY1ZjVmNWY1VjNV81XzVfNV80XzRfNF80WxRbE1sTWxNbE1sTWxJX
        ElcSV/JW8lbyVvFW8VLxUvFS8VLwUtBS0FLQUtBO0E7PTs9Oz07PTs9Oz0quSq5KrkquSq5KrkqtSq1K
        rUqtRq1GrUatRo1GjEaMRoxGjEaMRoxCjEKMQoxCjEKLQotCi0KLQotCi0KLQotCi0KLQotCi0KLQotC
        i0KLQotCi0KLQotCi0J5a3hreGt4a3hreGd3Z3dnd2dXZ1dnVmdWY1ZjVmNWY1ZjNWM1XzVfNV81XzRf
        NF80XzRbFFsTWxNbE1sTWxNbElcSVxJX8lbyVvJW8VbxUvFS8VLxUvBS0FLQUtBO0E7QTs9Oz07PTs9O
        z07PSs5KrkquSq5KrkquSq1KrUqtSq1GrUatRo1GjUaNRoxGjEaMRoxGjEKMQoxCjEKLQotCi0KLQotC
        i0KLQotCi0KLQotCi0KLQotCi0KLQotCi0KLQotCi0KLQnlreGt4a3hreGt4Z3dnd2d3Z1dnV2dWZ1Zj
        VmNWY1ZjVmM1YzVfNV81XzVfNF80XzRfNFsUWxNbE1sTWxNbE1sSVxJXElfyVvJW8lbxVvFS8VLxUvFS
        8FLwUtBS0E7QTtBOz07PTs9Oz07PTs9OzkquSq5KrkquSq5KrkqtSq1KrUatRq1GrUaNRo1GjEaMRoxG
        jEaMQoxCjEKMQotCi0KLQotCi0KLQotCi0KLQotCi0KLQotCi0KLQotCi0KLQotCi0KLQotCeWt4a3hr
        eGt4a3hnd2d3Z3dnV2dXZ1ZnVmNWY1ZjVmNWYzVjNV81XzVfNV80XzRfNF80WxRbE1sTWxNbE1sTWxJX
        ElcSVxJX8lbyVvFW8VLxUvFS8VLxUtBS0FLQTtBO0E7PTs9Oz07PTs9Oz07OSq5KrkquSq5KrkqtSq1K
        rUqtRq1GrUaNRq1GjUaMRoxGjEaMRoxGjEKMQoxCi0KLQotCi0KLQotCi0KLQotCi0KLQotCi0KLQotC
        i0KLQotCi0KLQotCi0J5a3hreGt4a3hreGd3Z3dnV2dXZ1dnVmdWY1ZjVmNWY1ZjNWM1XzVfNV81XzRf
        NF80WzRbFFsTWxNbE1sTWxNbElcSVxJXElfyVvJW8VbxVvFS8VLxUvBS0FLQUtBS0E7QTs9Oz07PTs9O
        z07PSs5KzkquSq5KrkquSq5KrUqtRq1GrUatRq1GrUaMRoxGjEaMRoxGjEKMQoxCjEKMQotCi0KLQotC
        i0KLQotCi0KLQotCi0KLQotCi0KLQotCi0KLQotCi0KLQnlreGt4a3hreGd4Z3dnd2d3Z1dnV2dWZ1Zj
        VmNWY1ZjVmM1YzVfNV81XzVfNF80XzRfNFsUWxNbE1sTWxNbE1sSVxJXElfyVvJW8lbxVvFS8VLxUvFS
        8FLQUtBS0E7QTtBOz07PTs9Oz07PTs9KzkquSq5KrkquSq5KrUqtSq1KrUatRq1GrUaNRo1GjEaMRoxG
        jEaMQoxCjEKMQotCi0KLQotCi0KLQotCi0KLQotCi0KLQotCi0KLQotCi0KLQotCi0KLQotCeWt4a3hr
        eGt4a3hnd2d3Z3dnV2dXZ1ZnVmNWY1ZjVmNWY1VjNV81XzVfNV80XzRfNF80WxRbE1sTWxNbE1sTWxJX
        ElcSV/JW8lbyVvFW8VLxUvFS8VLwUvBS0FLQUtBO0E7PTs9Oz07PTs9Oz0rOSq5KrkquSq5KrkqtSq1K
        rUqtRq1GrUatRo1GjUaMRoxGjEaMRoxCjEKMQoxCi0KLQotCi0KLQotCi0KLQotCi0KLQotCi0KLQotC
        i0KLQotCi0KLQotCi0J4a3hreGt4a3hreGd3Z3dnV2dXZ1dnVmNWY1ZjVmNWY1ZjVWM1XzVfNV81XzRf
        NF80XzRbFFsTWxNbE1sTWxNbElcSVxJX8lbyVvJW8VbxUvFS8VLxUvBS0FLQUtBO0E7QTs9Oz07PTs9O
        z07PTs5KrkquSq5KrkquSq5KrUqtRq1GrUatRq1GjUaNRoxGjEaMRoxGjEKMQoxCjEKLQotCi0KLQotC
        i0KLQotCi0KLQotCi0KLQotCi0KLQotCi0KLQotCi0KLQnhreGt4a3hreGt4Z3dnd2d3Z1dnV2dWY1Zj
        VmNWY1ZjVmNVYzVjNV81XzVfNF80XzRfNFsUWxNbE1sTWxNbE1sSVxJXElfyVvJW8lbxVvFS8VLxUvFS
        8VLQUtBS0FLQTtBOz07PTs9Oz07PTs9KrkrOSq5KrkquSq5KrUqtSq1KrUatRq1GrUaNRo1GjEaMRoxG
        jEaMQoxCjEKMQoxCi0KLQotCi0KLQotCi0KLQotCi0KLQotCi0KLQotCi0KLQotCi0KLQotCeGt4a3hr
        eGt4a3hnd2d3Z1dnV2dXZ1ZnVmNWY1ZjVmNWYzVjNV81XzVfNV80XzRfNF80WxRbE1sTWxNbE1sTWxJb
        ElcSV/JW8lbyVvFW8VbxUvFS8VLxUtBS0FLQTtBO0E7PTs9Oz07PTs9Oz0rOSq5KrkquSq5KrkquSq1K
        rUqtRq1GrUatRo1GjUaMRoxGjEaMRoxCjEKMQoxCjEKLQotCi0KLQotCi0KLQotCi0KLQotCi0KLQotC
        i0KLQotCi0KLQotCi0J5a3hreGt4a3hreGd3Z3dnd2dXZ1dnVmdWY1ZjVmNWY1ZjVWM1XzVfNV81XzRf
        NF80XzRbFFsTWxNbE1sTWxNbElcSVxJX8lbyVvJW8VbxUvFS8VLxUvBS0FLQUtBS0E7QTs9Oz07PTs9O
        z07PSq5KrkquSq5KrkquSq1KrUqtSq1GrUatRq1GjUaMRoxGjEaMRoxGjEKMQoxCjEKMQotCi0KLQotC
        i0KLQotCi0KLQotCi0KLQotCi0KLQotCi0KLQotCi0KLQnlreGt4a3hreGt4Z3dnd2d3Z1dnV2dWZ1Zj
        VmNWY1ZjVmM1YzVfNV81XzVfNF80XzRfNFsUWxNbE1sTWxNbE1sSVxJXElfyVvJW8lbxVvFS8VLxUvFS
        8FLQUtBS0E7QTtBOz07PTs9Oz07PTs9KzkquSq5KrkquSq5KrUqtSq1KrUatRq1GjUaNRo1GjEaMRoxG
        jEaMQoxCjEKMQotCi0KLQotCi0KLQotCi0KLQotCi0KLQotCi0KLQotCi0KLQotCi0KLQotCeWt4a3hr
        eGt4a3hnd2d3Z3dnV2dXZ1ZnVmNWY1ZjVmNWYzVjNV81XzVfNV80XzRfNF80WxRbE1sTWxNbE1sTWxJX
        ElcSV/JW8lbyVvFW8VLxUvFS8VLwUvBS0FLQTtBO0E7PTs9Oz07PTs9Oz07OSq5KrkquSq5KrkquSq1K
        rUqtRq1GrUatRo1GjUaMRoxGjEaMRoxCjEKMQoxCi0KLQotCi0KLQotCi0KLQotCi0KLQotCi0KLQotC
        i0KLQotCi0KLQotCi0J5a3hreGt4a3hreGd3Z3dnd2dXZ1dnVmdWY1ZjVmNWY1ZjNWM1XzVfNV81XzRf
        NF80XzRbFFsTWxNbE1sTWxNbElcSVxJXElfyVvJW8VbxUvFS8VLxUvFS0FLQUtBO0E7QTs9Oz07PTs9O
        z07PTs5KrkquSq5KrkquSq1KrUqtSq1GrUatRo1GrUaNRoxGjEaMRoxGjEaMQoxCjEKLQotCi0KLQotC
        i0KLQotCi0KLQotCi0KLQotCi0KLQotCi0KLQotCi0KLQnlreGt4a3hreGt4Z3dnd2dXZ1dnV2dWZ1Zj
        VmNWY1ZjVmM1YzVfNV81XzVfNF80XzRbNFsUWxNbE1sTWxNbE1sSVxJXElcSV/JW8lbxVvFW8VLxUvFS
        8FLQUtBS0FLQTtBOz07PTs9Oz07PTs9KzkrOSq5KrkquSq5KrkqtSq1GrUatRq1GrUatRoxGjEaMRoxG
        jEaMQoxCjEKMQoxCi0KLQotCi0KLQotCi0KLQotCi0KLQotCi0KLQotCi0KLQotCi0KLQotCeWt4a3hr
        eGt4Z3hnd2d3Z3dnV2dXZ1ZnVmNWY1ZjVmNWYzVjNV81XzVfNV80XzRfNF80WxRbE1sTWxNbE1sTWxJX
        ElcSV/JW8lbyVvFW8VLxUvFS8VLwUtBS0FLQTtBO0E7PTs9Oz07PTs9Oz0rOSq5KrkquSq5KrkqtSq1K
        rUqtRq1GrUatRo1GjUaMRoxGjEaMRoxCjEKMQoxCi0KLQotCi0KLQotCi0KLQotCi0KLQotCi0KLQotC
        i0KLQotCi0KLQotCi0J5a3hreGt4a3hreGd3Z3dnd2dXZ1dnVmdWY1ZjVmNWY1ZjVWM1XzVfNV81XzRf
        NF80XzRbFFsTWxNbE1sTWxNbElcSVxJX8lbyVvJW8VbxUvFS8VLxUvBS8FLQUtBS0E7QTs9Oz07PTs9O
        z07PSs5KrkquSq5KrkquSq1KrUqtSq1GrUatRq1GjUaNRoxGjEaMRoxGjEKMQoxCjEKLQotCi0KLQotC
        i0KLQotCi0KLQotCi0KLQotCi0KLQotCi0KLQotCi0KLQnhreGt4a3hreGt4Z3dnd2dXZ1dnV2dWY1Zj
        VmNWY1ZjVmNVYzVfNV81XzVfNF80XzRfNFsUWxNbE1sTWxNbE1sSVxJXElfyVvJW8lbxVvFS8VLxUvFS
        8FLQUtBS0E7QTtBOz07PTs9Oz07PTs9OzkquSq5KrkquSq5KrkqtSq1GrUatRq1GrUaNRo1GjEaMRoxG
        jEaMQoxCjEKMQotCi0KLQotCi0KLQotCi0KLQotCi0KLQotCi0KLQotCi0KLQotCi0KLQotCeGt4a3hr
        eGt4a3hnd2d3Z3dnV2dXZ1ZjVmNWY1ZjVmNWY1VjNWM1XzVfNV80XzRfNF80WxRbE1sTWxNbE1sTWxJX
        ElcSV/JW8lbyVvFW8VLxUvFS8VLxUtBS0FLQUtBO0E7PTs9Oz07PTs9Oz0quSs5KrkquSq5KrkqtSq1K
        rUqtRq1GrUatRo1GjUaMRoxGjEaMRoxCjEKMQoxCjEKLQotCi0KLQotCi0KLQotCi0KLQotCi0KLQotC
        i0KLQotCi0KLQotCi0J4a3hreGt4a3hreGd3Z3dnV2dXZ1dnVmdWY1ZjVmNWY1ZjNWM1XzVfNV81XzRf
        NF80XzRbFFsTWxNbE1sTWxNbElsSVxJX8lbyVvJW8VbxVvFS8VLxUvFS0FLQUtBO0E7QTs9Oz07PTs9O
        z07PSs5KrkquSq5KrkquSq5KrUqtSq1GrUatRq1GjUaNRoxGjEaMRoxGjEKMQoxCjEKMQotCi0KLQotC
        i0KLQotCi0KLQotCi0KLQotCi0KLQotCi0KLQotCi0KLQg==
</value>
  </data>
</root>